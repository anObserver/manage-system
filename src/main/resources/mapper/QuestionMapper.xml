<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.whu.managesystem.dao.QuestionMapper">
  <resultMap id="BaseResultMap" type="cn.edu.whu.managesystem.model.Question">
    <id column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="knowledge_point_id" jdbcType="INTEGER" property="knowledgePointId" />
    <result column="power_point_id" jdbcType="INTEGER" property="powerPointId" />
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    question_id, course_id, type_id, unit_id, difficulty, knowledge_point_id, power_point_id, context, answer, is_valid, create_time, update_time
  </sql>
  <sql id="Base_Insert_List">
    course_id, type_id, unit_id, difficulty, knowledge_point_id, power_point_id, context, answer, is_valid, create_time, update_time
  </sql>
  <update id="deleteQuestionById" parameterType="java.lang.Integer">
    update  question
    set is_valid = 0
    where question_id = #{questionId, jdbcType=INTEGER}
  </update>

  <insert id="addQuestion" parameterType="cn.edu.whu.managesystem.command.InsertCommand">
    insert into question
    (<include refid="Base_Insert_List"/>)
    values (#{courseId}, #{typeId}, #{unitId}, #{difficulty}, #{knowledgePointId}, #{powerPointId}, #{context}, #{answer}, 1, unix_timestamp(), unix_timestamp())
  </insert>

  <update id="updateQuestion" parameterType="cn.edu.whu.managesystem.command.UpdateCommand">
    update question
    set
    update_time = unix_timestamp()
    <if test="courseId != null">
      , course_id = #{courseId}
    </if>
    <if test="typeId != null">
      , type_id = #{typeId}
    </if>
    <if test="unitId != null">
      , unit_id = #{unitId}
    </if>
    <if test="difficulty != null">
      , difficulty = #{difficulty}
    </if>
    <if test="knowledgePointId != null">
      , knowledge_point_id = #{knowledgePointId}
    </if>
    <if test="powerPointId != null">
      , power_point_id = #{powerPointId}
    </if>
    <if test="context != null">
      , context = #{context}
    </if>
    <if test="answer != null">
      , answer = #{answer}
    </if>
  </update>

  <select id="getQuestionByCond" parameterType="cn.edu.whu.managesystem.command.SelectByCondCommand" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from question
    where is_valid = 1
    <if test="courseIds != null">
      and course_id in
      <foreach collection="courseIds" close=")" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="typeIds != null">
      and type_id in
      <foreach collection="typeIds" close=")" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="unitIds != null">
      and unit_id in
      <foreach collection="unitIds" close=")" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="difficulty != null">
      and difficulty in
      <foreach collection="difficulty" close=")" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="knowledgePointIds != null">
      and knowledge_point_id in
      <foreach collection="knowledgePointIds" close=")" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="powerPointIds != null">
      and power_point_id in
      <foreach collection="powerPointIds" close=")" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
    </if>
  </select>
</mapper>